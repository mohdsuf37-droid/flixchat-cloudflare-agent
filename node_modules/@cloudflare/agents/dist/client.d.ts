import {
  PartySocketOptions,
  PartyFetchOptions,
  PartySocket,
} from "partysocket";

type AgentClientOptions = Omit<PartySocketOptions, "party" | "room"> & {
  agent: string;
  name?: string;
};
type AgentClientFetchOptions = Omit<PartyFetchOptions, "party" | "room"> & {
  agent: string;
  name?: string;
};
declare class AgentClient extends PartySocket {
  static fetch(opts: PartyFetchOptions): Promise<Response>;
  constructor(opts: AgentClientOptions);
}
declare function agentFetch(
  opts: AgentClientFetchOptions,
  init?: RequestInit
): Promise<Response>;

export {
  AgentClient,
  type AgentClientFetchOptions,
  type AgentClientOptions,
  agentFetch,
};
