// src/react.tsx
import { usePartySocket } from "partysocket/react";
function useAgent(options) {
  const agent = usePartySocket({
    prefix: "agents",
    party: options.agent,
    room: options.name || "default",
    ...options,
    onMessage: (message) => {
      if (typeof message.data === "string" && message.data.startsWith("cf_agent_state:")) {
        const parsedMessage = JSON.parse(message.data.slice(15));
        options.onStateUpdate?.(parsedMessage.state, "server");
        return;
      }
      options.onMessage?.(message);
    }
  });
  agent.setState = (state) => {
    agent.send(
      "cf_agent_state:" + JSON.stringify({ type: "cf_agent_state", state })
    );
    options.onStateUpdate?.(state, "client");
  };
  return agent;
}

export {
  useAgent
};
//# sourceMappingURL=chunk-QK4CVDZM.js.map