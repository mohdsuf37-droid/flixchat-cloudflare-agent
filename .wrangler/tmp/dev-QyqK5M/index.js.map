{
  "version": 3,
  "sources": ["../../../node_modules/partyserver/src/index.ts", "../../../node_modules/partyserver/src/connection.ts", "../../../node_modules/nanoid/url-alphabet/index.js", "../../../node_modules/nanoid/index.browser.js", "../../../node_modules/cron-schedule/src/utils.ts", "../../../node_modules/cron-schedule/src/cron.ts", "../../../node_modules/cron-schedule/src/cron-parser.ts", "../../../node_modules/@cloudflare/agents/src/index.ts", "../../../src/agent.ts", "../../../src/index.ts", "file:///C:/Users/ADMIN/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "file:///C:/Users/ADMIN/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-eEzcaS/middleware-insertion-facade.js", "file:///C:/Users/ADMIN/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-eEzcaS/middleware-loader.entry.ts"],
  "sourceRoot": "E:\\cf-ai-agent-pro\\.wrangler\\tmp\\dev-QyqK5M",
  "sourcesContent": ["// rethink error handling, how to pass it on to the client\n// rethink oBC/oBR\n// push for durable.setState (in addition to connection.setState)\n\nimport { DurableObject } from \"cloudflare:workers\";\nimport { nanoid } from \"nanoid\";\n\nimport {\n  createLazyConnection,\n  HibernatingConnectionManager,\n  InMemoryConnectionManager\n} from \"./connection\";\n\nimport type { ConnectionManager } from \"./connection\";\nimport type {\n  Connection,\n  ConnectionContext,\n  ConnectionSetStateFn,\n  ConnectionState\n} from \"./types\";\n\nexport * from \"./types\";\n\nexport type WSMessage = ArrayBuffer | ArrayBufferView | string;\n\n// Let's cache the server namespace map\n// so we don't call it on every request\nconst serverMapCache = new WeakMap<\n  Record<string, unknown>,\n  Record<string, DurableObjectNamespace>\n>();\n\n/**\n * For a given server namespace, create a server with a name.\n */\nexport async function getServerByName<Env, T extends Server<Env>>(\n  serverNamespace: DurableObjectNamespace<T>,\n  name: string,\n  options?: {\n    jurisdiction?: DurableObjectJurisdiction;\n    locationHint?: DurableObjectLocationHint;\n  }\n): Promise<DurableObjectStub<T>> {\n  if (options?.jurisdiction) {\n    serverNamespace = serverNamespace.jurisdiction(options.jurisdiction);\n  }\n\n  const id = serverNamespace.idFromName(name);\n  const stub = serverNamespace.get(id, options);\n\n  // TODO: fix this to use RPC\n\n  const req = new Request(\n    \"http://dummy-example.cloudflare.com/cdn-cgi/partyserver/set-name/\"\n  );\n\n  req.headers.set(\"x-partykit-room\", name);\n\n  // Note the lack of await\n  stub.fetch(req).catch((e) => {\n    console.error(\"Could not set server name:\", e);\n  });\n\n  return stub;\n}\n\nfunction camelCaseToKebabCase(str: string): string {\n  let kebabified = str.replace(\n    /[A-Z]/g,\n    (letter) => `-${letter.toLowerCase()}`\n  );\n  kebabified = kebabified.startsWith(\"-\") ? kebabified.slice(1) : kebabified;\n  // also remove any trailing -'s\n  return kebabified.replace(/-$/, \"\");\n}\nexport interface PartyServerOptions<Env> {\n  prefix?: string;\n  jurisdiction?: DurableObjectJurisdiction;\n  locationHint?: DurableObjectLocationHint;\n  onBeforeConnect?: (\n    req: Request,\n    lobby: {\n      party: keyof Env;\n      name: string;\n    }\n  ) => Response | Request | void | Promise<Response | Request | void>;\n  onBeforeRequest?: (\n    req: Request,\n    lobby: {\n      party: keyof Env;\n      name: string;\n    }\n  ) =>\n    | Response\n    | Request\n    | void\n    | Promise<Response | Request | undefined | void>;\n}\n/**\n * A utility function for PartyKit style routing.\n */\nexport async function routePartykitRequest<\n  Env = unknown,\n  T extends Server<Env> = Server<Env>\n>(\n  req: Request,\n  env: Record<string, unknown>,\n  options?: PartyServerOptions<typeof env>\n): Promise<Response | null> {\n  if (!serverMapCache.has(env)) {\n    serverMapCache.set(\n      env,\n      Object.entries(env).reduce((acc, [k, v]) => {\n        if (\n          v &&\n          typeof v === \"object\" &&\n          \"idFromName\" in v &&\n          typeof v.idFromName === \"function\"\n        ) {\n          Object.assign(acc, { [camelCaseToKebabCase(k)]: v });\n          return acc;\n        }\n        return acc;\n      }, {})\n    );\n  }\n  const map = serverMapCache.get(env) as unknown as Record<\n    string,\n    DurableObjectNamespace<T>\n  >;\n\n  const prefix = options?.prefix || \"parties\";\n\n  const url = new URL(req.url);\n\n  const parts = url.pathname.split(\"/\");\n  if (parts[1] === prefix && parts.length < 4) {\n    return null;\n  }\n  const name = parts[3];\n  const namespace = parts[2];\n  if (parts[1] === prefix && name && namespace) {\n    if (!map[namespace]) {\n      if (namespace === \"main\") {\n        console.warn(\n          \"You appear to be migrating a PartyKit project to PartyServer.\"\n        );\n        console.warn(`PartyServer doesn't have a \"main\" party by default. Try adding this to your PartySocket client:\\n \nparty: \"${camelCaseToKebabCase(Object.keys(map)[0])}\"`);\n      } else {\n        console.error(`The url ${req.url} does not match any server namespace. \nDid you forget to add a durable object binding to the class in your wrangler.toml?`);\n      }\n    }\n\n    let doNamespace = map[namespace];\n    if (options?.jurisdiction) {\n      doNamespace = doNamespace.jurisdiction(options.jurisdiction);\n    }\n\n    const id = doNamespace.idFromName(name);\n    const stub = doNamespace.get(id, options);\n\n    // const stub = await getServerByName(map[namespace], name, options); // TODO: fix this\n    // make a new request with additional headers\n\n    req = new Request(req);\n    req.headers.set(\"x-partykit-room\", name);\n    req.headers.set(\"x-partykit-namespace\", namespace);\n    if (options?.jurisdiction) {\n      req.headers.set(\"x-partykit-jurisdiction\", options.jurisdiction);\n    }\n\n    if (req.headers.get(\"Upgrade\")?.toLowerCase() === \"websocket\") {\n      if (options?.onBeforeConnect) {\n        const reqOrRes = await options.onBeforeConnect(req, {\n          party: namespace,\n          name\n        });\n        if (reqOrRes instanceof Request) {\n          req = reqOrRes;\n        } else if (reqOrRes instanceof Response) {\n          return reqOrRes;\n        }\n      }\n    } else {\n      if (options?.onBeforeRequest) {\n        const reqOrRes = await options.onBeforeRequest(req, {\n          party: namespace,\n          name\n        });\n        if (reqOrRes instanceof Request) {\n          req = reqOrRes;\n        } else if (reqOrRes instanceof Response) {\n          return reqOrRes;\n        }\n      }\n    }\n\n    return stub.fetch(req);\n  } else {\n    return null;\n  }\n}\n\nexport class Server<Env = unknown> extends DurableObject<Env> {\n  static options = {\n    hibernate: false\n  };\n\n  #status: \"zero\" | \"starting\" | \"started\" = \"zero\";\n\n  #ParentClass: typeof Server = Object.getPrototypeOf(this).constructor;\n\n  #connectionManager: ConnectionManager = this.#ParentClass.options.hibernate\n    ? new HibernatingConnectionManager(this.ctx)\n    : new InMemoryConnectionManager();\n\n  // biome-ignore lint/complexity/noUselessConstructor: <explanation>\n  constructor(ctx: DurableObjectState, env: Env) {\n    super(ctx, env);\n\n    // this.ctx\n    //   .blockConcurrencyWhile(async () => {\n    //     await this.#initialize();\n    //   })\n    //   .catch((e) => {\n    //     console.error(`Error while initilaizing ${this.#ParentClass.name}:`, e);\n    //   });\n\n    // TODO: throw error if any of\n    // broadcast/getConnection/getConnections/getConnectionTags\n    // fetch/webSocketMessage/webSocketClose/webSocketError/alarm\n    // have been overridden\n  }\n\n  /**\n   * Handle incoming requests to the server.\n   */\n  async fetch(request: Request): Promise<Response> {\n    if (!this.#_name) {\n      // This is temporary while we solve https://github.com/cloudflare/workerd/issues/2240\n\n      // get namespace and room from headers\n      // const namespace = request.headers.get(\"x-partykit-namespace\");\n      const room = request.headers.get(\"x-partykit-room\");\n      if (\n        // !namespace ||\n        !room\n      ) {\n        throw new Error(`Missing namespace or room headers when connecting to ${this.#ParentClass.name}.\nDid you try connecting directly to this Durable Object? Try using getServerByName(namespace, id) instead.`);\n      }\n      await this.setName(room);\n    }\n\n    try {\n      const url = new URL(request.url);\n\n      // TODO: this is a hack to set the server name,\n      // it'll be replaced with RPC later\n      if (url.pathname === \"/cdn-cgi/partyserver/set-name/\") {\n        // we can just return a 200 for now\n        return Response.json({ ok: true });\n      }\n\n      if (request.headers.get(\"Upgrade\")?.toLowerCase() !== \"websocket\") {\n        return await this.onRequest(request);\n      } else {\n        // Create the websocket pair for the client\n        const { 0: clientWebSocket, 1: serverWebSocket } = new WebSocketPair();\n        let connectionId = url.searchParams.get(\"_pk\");\n        if (!connectionId) {\n          connectionId = nanoid();\n        }\n\n        let connection: Connection = Object.assign(serverWebSocket, {\n          id: connectionId,\n          server: this.name,\n          state: null as unknown as ConnectionState<unknown>,\n          setState<T = unknown>(setState: T | ConnectionSetStateFn<T>) {\n            let state: T;\n            if (setState instanceof Function) {\n              state = setState(this.state as ConnectionState<T>);\n            } else {\n              state = setState;\n            }\n\n            // TODO: deepFreeze object?\n            this.state = state as ConnectionState<T>;\n            return this.state;\n          }\n        });\n\n        const ctx = { request };\n\n        const tags = await this.getConnectionTags(connection, ctx);\n\n        // Accept the websocket connection\n        connection = this.#connectionManager.accept(connection, {\n          tags,\n          server: this.name\n        });\n\n        if (!this.#ParentClass.options.hibernate) {\n          this.#attachSocketEventHandlers(connection);\n        }\n        await this.onConnect(connection, ctx);\n\n        return new Response(null, { status: 101, webSocket: clientWebSocket });\n      }\n    } catch (err) {\n      console.error(\n        `Error in ${this.#ParentClass.name}:${this.name} fetch:`,\n        err\n      );\n      if (!(err instanceof Error)) throw err;\n      if (request.headers.get(\"Upgrade\") === \"websocket\") {\n        // Annoyingly, if we return an HTTP error in response to a WebSocket request, Chrome devtools\n        // won't show us the response body! So... let's send a WebSocket response with an error\n        // frame instead.\n        const pair = new WebSocketPair();\n        pair[1].accept();\n        pair[1].send(JSON.stringify({ error: err.stack }));\n        pair[1].close(1011, \"Uncaught exception during session setup\");\n        return new Response(null, { status: 101, webSocket: pair[0] });\n      } else {\n        return new Response(err.stack, { status: 500 });\n      }\n    }\n  }\n\n  async webSocketMessage(ws: WebSocket, message: WSMessage): Promise<void> {\n    const connection = createLazyConnection(ws);\n\n    // rehydrate the server name if it's wiken up\n    await this.setName(connection.server);\n    // TODO: ^ this shouldn't be async\n\n    if (this.#status !== \"started\") {\n      // This means the server \"woke up\" after hibernation\n      // so we need to hydrate it again\n      await this.#initialize();\n    }\n\n    return this.onMessage(connection, message);\n  }\n\n  async webSocketClose(\n    ws: WebSocket,\n    code: number,\n    reason: string,\n    wasClean: boolean\n  ): Promise<void> {\n    const connection = createLazyConnection(ws);\n\n    // rehydrate the server name if it's wiken up\n    await this.setName(connection.server);\n    // TODO: ^ this shouldn't be async\n\n    if (this.#status !== \"started\") {\n      // This means the server \"woke up\" after hibernation\n      // so we need to hydrate it again\n      await this.#initialize();\n    }\n    return this.onClose(connection, code, reason, wasClean);\n  }\n\n  async webSocketError(ws: WebSocket, error: unknown): Promise<void> {\n    const connection = createLazyConnection(ws);\n\n    // rehydrate the server name if it's wiken up\n    await this.setName(connection.server);\n    // TODO: ^ this shouldn't be async\n\n    if (this.#status !== \"started\") {\n      // This means the server \"woke up\" after hibernation\n      // so we need to hydrate it again\n      await this.#initialize();\n    }\n    return this.onError(connection, error);\n  }\n\n  async #initialize(): Promise<void> {\n    await this.ctx.blockConcurrencyWhile(async () => {\n      this.#status = \"starting\";\n      await this.onStart();\n      this.#status = \"started\";\n    });\n  }\n\n  #attachSocketEventHandlers(connection: Connection) {\n    const handleMessageFromClient = (event: MessageEvent) => {\n      this.onMessage(connection, event.data)?.catch<void>((e) => {\n        console.error(\"onMessage error:\", e);\n      });\n    };\n\n    const handleCloseFromClient = (event: CloseEvent) => {\n      connection.removeEventListener(\"message\", handleMessageFromClient);\n      connection.removeEventListener(\"close\", handleCloseFromClient);\n      this.onClose(connection, event.code, event.reason, event.wasClean)?.catch(\n        (e) => {\n          console.error(\"onClose error:\", e);\n        }\n      );\n    };\n\n    const handleErrorFromClient = (e: ErrorEvent) => {\n      connection.removeEventListener(\"message\", handleMessageFromClient);\n      connection.removeEventListener(\"error\", handleErrorFromClient);\n      this.onError(connection, e.error)?.catch((e) => {\n        console.error(\"onError error:\", e);\n      });\n    };\n\n    connection.addEventListener(\"close\", handleCloseFromClient);\n    connection.addEventListener(\"error\", handleErrorFromClient);\n    connection.addEventListener(\"message\", handleMessageFromClient);\n  }\n\n  // Public API\n\n  #_name: string | undefined;\n\n  #_longErrorAboutNameThrown = false;\n  /**\n   * The name for this server. Write-once-only.\n   */\n  get name(): string {\n    if (!this.#_name) {\n      if (!this.#_longErrorAboutNameThrown) {\n        this.#_longErrorAboutNameThrown = true;\n        throw new Error(\n          `Attempting to read .name on ${this.#ParentClass.name} before it was set. The name can be set by explicitly calling .setName(name) on the stub, or by using routePartyKitRequest(). This is a known issue and will be fixed soon. Follow https://github.com/cloudflare/workerd/issues/2240 for more updates.`\n        );\n      } else {\n        throw new Error(\n          `Attempting to read .name on ${this.#ParentClass.name} before it was set.`\n        );\n      }\n    }\n    return this.#_name;\n  }\n\n  // We won't have an await inside this function\n  // but it will be called remotely,\n  // so we need to mark it as async\n  async setName(name: string) {\n    if (!name) {\n      throw new Error(\"A name is required.\");\n    }\n    if (this.#_name && this.#_name !== name) {\n      throw new Error(\"This server already has a name.\");\n    }\n    this.#_name = name;\n\n    if (this.#status !== \"started\") {\n      await this.ctx.blockConcurrencyWhile(async () => {\n        await this.#initialize();\n      });\n    }\n  }\n\n  #sendMessageToConnection(connection: Connection, message: WSMessage): void {\n    try {\n      connection.send(message);\n    } catch (_e) {\n      // close connection\n      connection.close(1011, \"Unexpected error\");\n    }\n  }\n\n  /** Send a message to all connected clients, except connection ids listed in `without` */\n  broadcast(\n    msg: string | ArrayBuffer | ArrayBufferView,\n    without?: string[] | undefined\n  ): void {\n    for (const connection of this.#connectionManager.getConnections()) {\n      if (!without || !without.includes(connection.id)) {\n        this.#sendMessageToConnection(connection, msg);\n      }\n    }\n  }\n\n  /** Get a connection by connection id */\n  getConnection<TState = unknown>(id: string): Connection<TState> | undefined {\n    return this.#connectionManager.getConnection<TState>(id);\n  }\n\n  /**\n   * Get all connections. Optionally, you can provide a tag to filter returned connections.\n   * Use `Server#getConnectionTags` to tag the connection on connect.\n   */\n  getConnections<TState = unknown>(tag?: string): Iterable<Connection<TState>> {\n    return this.#connectionManager.getConnections<TState>(tag);\n  }\n\n  /**\n   * You can tag a connection to filter them in Server#getConnections.\n   * Each connection supports up to 9 tags, each tag max length is 256 characters.\n   */\n  getConnectionTags(\n    connection: Connection,\n    context: ConnectionContext\n  ): string[] | Promise<string[]> {\n    return [];\n  }\n\n  // Implemented by the user\n\n  /**\n   * Called when the server is started for the first time.\n   */\n  onStart(): void | Promise<void> {}\n\n  /**\n   * Called when a new connection is made to the server.\n   */\n  onConnect(\n    connection: Connection,\n    ctx: ConnectionContext\n  ): void | Promise<void> {\n    console.log(\n      `Connection ${connection.id} connected to ${this.#ParentClass.name}:${this.name}`\n    );\n    // console.log(\n    //   `Implement onConnect on ${this.#ParentClass.name} to handle websocket connections.`\n    // );\n  }\n\n  /**\n   * Called when a message is received from a connection.\n   */\n  onMessage(connection: Connection, message: WSMessage): void | Promise<void> {\n    console.log(\n      `Received message on connection ${this.#ParentClass.name}:${connection.id}`\n    );\n    console.info(\n      `Implement onMessage on ${this.#ParentClass.name} to handle this message.`\n    );\n  }\n\n  /**\n   * Called when a connection is closed.\n   */\n  onClose(\n    connection: Connection,\n    code: number,\n    reason: string,\n    wasClean: boolean\n  ): void | Promise<void> {}\n\n  /**\n   * Called when an error occurs on a connection.\n   */\n  onError(connection: Connection, error: unknown): void | Promise<void> {\n    console.error(\n      `Error on connection ${connection.id} in ${this.#ParentClass.name}:${this.name}:`,\n      error\n    );\n    console.info(\n      `Implement onError on ${this.#ParentClass.name} to handle this error.`\n    );\n  }\n\n  /**\n   * Called when a request is made to the server.\n   */\n  onRequest(request: Request): Response | Promise<Response> {\n    // default to 404\n\n    console.warn(\n      `onRequest hasn't been implemented on ${this.#ParentClass.name}:${this.name} responding to ${request.url}`\n    );\n\n    return new Response(\"Not implemented\", { status: 404 });\n  }\n\n  onAlarm(): void | Promise<void> {\n    console.log(\n      `Implement onAlarm on ${this.#ParentClass.name} to handle alarms.`\n    );\n  }\n\n  async alarm(): Promise<void> {\n    if (this.#status !== \"started\") {\n      // This means the server \"woke up\" after hibernation\n      // so we need to hydrate it again\n      await this.#initialize();\n    }\n    await this.onAlarm();\n  }\n}\n", "// Polyfill WebSocket status code constants for environments that don't have them\n// in order to support libraries that expect standards-compatible WebSocket\n// implementations (e.g. PartySocket)\n\nimport type {\n  Connection,\n  ConnectionSetStateFn,\n  ConnectionState\n} from \"./types\";\n\nif (!(\"OPEN\" in WebSocket)) {\n  const WebSocketStatus = {\n    // @ts-expect-error\n    CONNECTING: WebSocket.READY_STATE_CONNECTING,\n    // @ts-expect-error\n    OPEN: WebSocket.READY_STATE_OPEN,\n    // @ts-expect-error\n    CLOSING: WebSocket.READY_STATE_CLOSING,\n    // @ts-expect-error\n    CLOSED: WebSocket.READY_STATE_CLOSED\n  };\n\n  Object.assign(WebSocket, WebSocketStatus);\n  // @ts-expect-error\n  Object.assign(WebSocket.prototype, WebSocketStatus);\n}\n\n/**\n * Store both platform attachments and user attachments in different namespaces\n */\ntype ConnectionAttachments = {\n  __pk: {\n    id: string;\n    // TODO: remove this once we have\n    // durable object level setState\n    server: string;\n  };\n  __user?: unknown;\n};\n\n/**\n * Cache websocket attachments to avoid having to rehydrate them on every property access.\n */\nclass AttachmentCache {\n  #cache = new WeakMap<WebSocket, ConnectionAttachments>();\n\n  get(ws: WebSocket): ConnectionAttachments {\n    let attachment = this.#cache.get(ws);\n    if (!attachment) {\n      attachment = WebSocket.prototype.deserializeAttachment.call(\n        ws\n      ) as ConnectionAttachments;\n      if (attachment !== undefined) {\n        this.#cache.set(ws, attachment);\n      } else {\n        throw new Error(\n          \"Missing websocket attachment. This is most likely an issue in PartyServer, please open an issue at https://github.com/threepointone/partyserver/issues\"\n        );\n      }\n    }\n\n    return attachment;\n  }\n\n  set(ws: WebSocket, attachment: ConnectionAttachments) {\n    this.#cache.set(ws, attachment);\n    WebSocket.prototype.serializeAttachment.call(ws, attachment);\n  }\n}\n\nconst attachments = new AttachmentCache();\nconst connections = new WeakSet<Connection>();\nconst isWrapped = (ws: WebSocket): ws is Connection => {\n  return connections.has(ws as Connection);\n};\n\n/**\n * Wraps a WebSocket with Connection fields that rehydrate the\n * socket attachments lazily only when requested.\n */\nexport const createLazyConnection = (\n  ws: WebSocket | Connection\n): Connection => {\n  if (isWrapped(ws)) {\n    return ws;\n  }\n\n  // if state was set on the socket before initializing the connection,\n  // capture it here so we can persist it again\n  let initialState = undefined;\n  if (\"state\" in ws) {\n    initialState = ws.state;\n    // biome-ignore lint/performance/noDelete: <explanation>\n    delete ws.state;\n  }\n\n  const connection = Object.defineProperties(ws, {\n    id: {\n      get() {\n        return attachments.get(ws).__pk.id;\n      }\n    },\n    server: {\n      get() {\n        return attachments.get(ws).__pk.server;\n      }\n    },\n    socket: {\n      get() {\n        return ws;\n      }\n    },\n    state: {\n      get() {\n        return ws.deserializeAttachment() as ConnectionState<unknown>;\n      }\n    },\n    setState: {\n      value: function setState<T>(setState: T | ConnectionSetStateFn<T>) {\n        let state: T;\n        if (setState instanceof Function) {\n          state = setState((this as Connection<T>).state);\n        } else {\n          state = setState;\n        }\n\n        ws.serializeAttachment(state);\n        return state as ConnectionState<T>;\n      }\n    },\n\n    deserializeAttachment: {\n      value: function deserializeAttachment<T = unknown>() {\n        const attachment = attachments.get(ws);\n        return (attachment.__user ?? null) as T;\n      }\n    },\n\n    serializeAttachment: {\n      value: function serializeAttachment<T = unknown>(attachment: T) {\n        const setting = {\n          ...attachments.get(ws),\n          __user: attachment ?? null\n        };\n\n        attachments.set(ws, setting);\n      }\n    }\n  }) as Connection;\n\n  if (initialState) {\n    connection.setState(initialState);\n  }\n\n  connections.add(connection);\n  return connection;\n};\n\nclass HibernatingConnectionIterator<T>\n  implements IterableIterator<Connection<T>>\n{\n  private index = 0;\n  private sockets: WebSocket[] | undefined;\n  constructor(\n    private state: DurableObjectState,\n    private tag?: string\n  ) {}\n\n  [Symbol.iterator](): IterableIterator<Connection<T>> {\n    return this;\n  }\n\n  next(): IteratorResult<Connection<T>, number | undefined> {\n    const sockets =\n      // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n      this.sockets ?? (this.sockets = this.state.getWebSockets(this.tag));\n\n    let socket: WebSocket;\n    // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n    while ((socket = sockets[this.index++])) {\n      // only yield open sockets to match non-hibernating behaviour\n      if (socket.readyState === WebSocket.READY_STATE_OPEN) {\n        const value = createLazyConnection(socket) as Connection<T>;\n        return { done: false, value };\n      }\n    }\n\n    // reached the end of the iteratee\n    return { done: true, value: undefined };\n  }\n}\n\nexport interface ConnectionManager {\n  getCount(): number;\n  getConnection<TState>(id: string): Connection<TState> | undefined;\n  getConnections<TState>(tag?: string): IterableIterator<Connection<TState>>;\n  accept(\n    connection: Connection,\n    options: { tags: string[]; server: string }\n  ): Connection;\n}\n\n/**\n * When not using hibernation, we track active connections manually.\n */\nexport class InMemoryConnectionManager<TState> implements ConnectionManager {\n  #connections: Map<string, Connection> = new Map();\n  tags: WeakMap<Connection, string[]> = new WeakMap();\n\n  getCount() {\n    return this.#connections.size;\n  }\n\n  getConnection<T = TState>(id: string) {\n    return this.#connections.get(id) as Connection<T> | undefined;\n  }\n\n  *getConnections<T = TState>(tag?: string): IterableIterator<Connection<T>> {\n    if (!tag) {\n      yield* this.#connections\n        .values()\n        .filter(\n          (c) => c.readyState === WebSocket.READY_STATE_OPEN\n        ) as IterableIterator<Connection<T>>;\n      return;\n    }\n\n    // simulate DurableObjectState.getWebSockets(tag) behaviour\n    for (const connection of this.#connections.values()) {\n      const connectionTags = this.tags.get(connection) ?? [];\n      if (connectionTags.includes(tag)) {\n        yield connection as Connection<T>;\n      }\n    }\n  }\n\n  accept(connection: Connection, options: { tags: string[]; server: string }) {\n    connection.accept();\n\n    this.#connections.set(connection.id, connection);\n    this.tags.set(connection, [\n      // make sure we have id tag\n      connection.id,\n      ...options.tags.filter((t) => t !== connection.id)\n    ]);\n\n    const removeConnection = () => {\n      this.#connections.delete(connection.id);\n      connection.removeEventListener(\"close\", removeConnection);\n      connection.removeEventListener(\"error\", removeConnection);\n    };\n    connection.addEventListener(\"close\", removeConnection);\n    connection.addEventListener(\"error\", removeConnection);\n\n    return connection;\n  }\n}\n\n/**\n * When opting into hibernation, the platform tracks connections for us.\n */\nexport class HibernatingConnectionManager<TState> implements ConnectionManager {\n  constructor(private controller: DurableObjectState) {}\n\n  getCount() {\n    return Number(this.controller.getWebSockets().length);\n  }\n\n  getConnection<T = TState>(id: string) {\n    // TODO: Should we cache the connections?\n    const sockets = this.controller.getWebSockets(id);\n    if (sockets.length === 0) return undefined;\n    if (sockets.length === 1)\n      return createLazyConnection(sockets[0]) as Connection<T>;\n\n    throw new Error(\n      `More than one connection found for id ${id}. Did you mean to use getConnections(tag) instead?`\n    );\n  }\n\n  getConnections<T = TState>(tag?: string | undefined) {\n    return new HibernatingConnectionIterator<T>(this.controller, tag);\n  }\n\n  accept(connection: Connection, options: { tags: string[]; server: string }) {\n    // dedupe tags in case user already provided id tag\n    const tags = [\n      connection.id,\n      ...options.tags.filter((t) => t !== connection.id)\n    ];\n\n    // validate tags against documented restrictions\n    // shttps://developers.cloudflare.com/durable-objects/api/hibernatable-websockets-api/#state-methods-for-websockets\n    if (tags.length > 10) {\n      throw new Error(\n        \"A connection can only have 10 tags, including the default id tag.\"\n      );\n    }\n\n    for (const tag of tags) {\n      if (typeof tag !== \"string\") {\n        throw new Error(`A connection tag must be a string. Received: ${tag}`);\n      }\n      if (tag === \"\") {\n        throw new Error(\"A connection tag must not be an empty string.\");\n      }\n      if (tag.length > 256) {\n        throw new Error(\"A connection tag must not exceed 256 characters\");\n      }\n    }\n\n    this.controller.acceptWebSocket(connection, tags);\n    connection.serializeAttachment({\n      __pk: {\n        id: connection.id,\n        server: options.server\n      },\n      __user: null\n    });\n\n    return createLazyConnection(connection);\n  }\n}\n", "export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n", "/* @ts-self-types=\"./index.d.ts\" */\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n", null, null, null, "import {\n  Server,\n  routePartykitRequest,\n  type PartyServerOptions,\n  getServerByName,\n  type Connection,\n  type ConnectionContext,\n  type WSMessage,\n} from \"partyserver\";\n\nimport { parseCronExpression } from \"cron-schedule\";\nimport { nanoid } from \"nanoid\";\n\nexport type { Connection, WSMessage, ConnectionContext } from \"partyserver\";\n\nimport { WorkflowEntrypoint as CFWorkflowEntrypoint } from \"cloudflare:workers\";\n\nexport class WorkflowEntrypoint extends CFWorkflowEntrypoint {}\n\nexport type Schedule<T = string> = {\n  id: string;\n  callback: string;\n  payload: T;\n} & (\n  | {\n      type: \"scheduled\";\n      time: number;\n    }\n  | {\n      type: \"delayed\";\n      time: number;\n      delayInSeconds: number;\n    }\n  | {\n      type: \"cron\";\n      time: number;\n      cron: string;\n    }\n);\n\nfunction getNextCronTime(cron: string) {\n  const interval = parseCronExpression(cron);\n  return interval.getNextDate();\n}\n\nconst STATE_ROW_ID = \"cf_state_row_id\";\n\nexport class Agent<Env, State = unknown> extends Server<Env> {\n  #state = undefined as State | undefined;\n  state: State | undefined;\n\n  static options = {\n    hibernate: true, // default to hibernate\n  };\n  sql<T = Record<string, any>>(\n    strings: TemplateStringsArray,\n    ...values: any[]\n  ) {\n    let query = \"\";\n    try {\n      // Construct the SQL query with placeholders\n      query = strings.reduce(\n        (acc, str, i) => acc + str + (i < values.length ? \"?\" : \"\"),\n        \"\"\n      );\n\n      // Execute the SQL query with the provided values\n      return [...this.ctx.storage.sql.exec(query, ...values)] as T[];\n    } catch (e) {\n      console.error(`failed to execute sql query: ${query}`, e);\n      throw e;\n    }\n  }\n  constructor(ctx: AgentContext, env: Env) {\n    super(ctx, env);\n\n    this.sql`\n      CREATE TABLE IF NOT EXISTS cf_agents_state (\n        id TEXT PRIMARY KEY NOT NULL,\n        state TEXT\n      )\n    `;\n    const _this = this;\n    Object.defineProperty(this, \"state\", {\n      get() {\n        if (!_this.#state) {\n          const result = _this.sql<{ state: State | undefined }>`\n      SELECT state FROM cf_agents_state WHERE id = ${STATE_ROW_ID}\n    `;\n          const state = result[0]?.state as string;\n          if (!state) return undefined;\n          _this.#state = JSON.parse(state);\n          return _this.#state;\n        }\n        return _this.#state;\n      },\n      set(value: State | undefined) {\n        throw new Error(\"State is read-only, use this.setState instead\");\n      },\n    });\n\n    void this.ctx.blockConcurrencyWhile(async () => {\n      try {\n        // Create alarms table if it doesn't exist\n        this.sql`\n        CREATE TABLE IF NOT EXISTS cf_agents_schedules (\n          id TEXT PRIMARY KEY NOT NULL DEFAULT (randomblob(9)),\n          callback TEXT,\n          payload TEXT,\n          type TEXT NOT NULL CHECK(type IN ('scheduled', 'delayed', 'cron')),\n          time INTEGER,\n          delayInSeconds INTEGER,\n          cron TEXT,\n          created_at INTEGER DEFAULT (unixepoch())\n        )\n      `;\n\n        // execute any pending alarms and schedule the next alarm\n        await this.alarm();\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n    });\n\n    const _onMessage = this.onMessage.bind(this);\n    this.onMessage = (connection: Connection, message: WSMessage) => {\n      if (\n        typeof message === \"string\" &&\n        message.startsWith(\"cf_agent_state:\")\n      ) {\n        const parsed = JSON.parse(message.slice(15));\n        this.#setStateInternal(parsed.state, connection);\n        return;\n      }\n      _onMessage(connection, message);\n    };\n\n    const _onConnect = this.onConnect.bind(this);\n    this.onConnect = (connection: Connection, ctx: ConnectionContext) => {\n      // TODO: This is a hack to ensure the state is sent after the connection is established\n      // must fix this\n      setTimeout(() => {\n        if (this.state) {\n          connection.send(\n            `cf_agent_state:` +\n              JSON.stringify({ type: \"cf_agent_state\", state: this.state })\n          );\n        }\n        _onConnect(connection, ctx);\n      }, 20);\n    };\n  }\n\n  #setStateInternal(state: State, source: Connection | \"server\" = \"server\") {\n    this.#state = state;\n    this.sql`\n    INSERT OR REPLACE INTO cf_agents_state (id, state)\n    VALUES (${STATE_ROW_ID}, ${JSON.stringify(state)})\n  `;\n    this.broadcast(\n      `cf_agent_state:` +\n        JSON.stringify({\n          type: \"cf_agent_state\",\n          state: state,\n        }),\n      source !== \"server\" ? [source.id] : []\n    );\n    this.onStateUpdate(state, source);\n  }\n\n  setState(state: State) {\n    this.#setStateInternal(state, \"server\");\n  }\n\n  #warnedToImplementOnStateUpdate = false;\n  onStateUpdate(state: State | undefined, source: Connection | \"server\") {\n    if (!this.#warnedToImplementOnStateUpdate) {\n      console.log(\n        \"state updated, implement onStateUpdate in your agent to handle this change\"\n      );\n      this.#warnedToImplementOnStateUpdate = true;\n    }\n  }\n\n  // onMessage(connection: Connection, message: WSMessage) {}\n\n  // onConnect(connection: Connection, ctx: ConnectionContext) {}\n\n  onEmail(email: ForwardableEmailMessage) {\n    throw new Error(\"Not implemented\");\n  }\n  render() {\n    throw new Error(\"Not implemented\");\n  }\n\n  async schedule<T = string>(\n    when: Date | string | number,\n    callback: string,\n    payload: T\n  ): Promise<Schedule<T>> {\n    const id = nanoid(9);\n\n    if (when instanceof Date) {\n      const timestamp = Math.floor(when.getTime() / 1000);\n      this.sql`\n        INSERT OR REPLACE INTO cf_agents_schedules (id, callback, payload, type, time)\n        VALUES (${id}, ${callback}, ${JSON.stringify(\n        payload\n      )}, 'scheduled', ${timestamp})\n      `;\n\n      await this.scheduleNextAlarm();\n\n      return {\n        id,\n        callback,\n        payload,\n        time: timestamp,\n        type: \"scheduled\",\n      };\n    } else if (typeof when === \"number\") {\n      const time = new Date(Date.now() + when * 1000);\n      const timestamp = Math.floor(time.getTime() / 1000);\n\n      this.sql`\n        INSERT OR REPLACE INTO cf_agents_schedules (id, callback, payload, type, delayInSeconds, time)\n        VALUES (${id}, ${callback}, ${JSON.stringify(\n        payload\n      )}, 'delayed', ${when}, ${timestamp})\n      `;\n\n      await this.scheduleNextAlarm();\n\n      return {\n        id,\n        callback,\n        payload,\n        delayInSeconds: when,\n        time: timestamp,\n        type: \"delayed\",\n      };\n    } else if (typeof when === \"string\") {\n      const nextExecutionTime = getNextCronTime(when);\n      const timestamp = Math.floor(nextExecutionTime.getTime() / 1000);\n\n      this.sql`\n        INSERT OR REPLACE INTO cf_agents_schedules (id, callback, payload, type, cron, time)\n        VALUES (${id}, ${callback}, ${JSON.stringify(\n        payload\n      )}, 'cron', ${when}, ${timestamp})\n      `;\n\n      await this.scheduleNextAlarm();\n\n      return {\n        id,\n        callback,\n        payload,\n        cron: when,\n        time: timestamp,\n        type: \"cron\",\n      };\n    } else {\n      throw new Error(\"Invalid schedule type\");\n    }\n  }\n  async getSchedule<T = string>(id: string): Promise<Schedule<T> | undefined> {\n    const result = this.sql<Schedule<string>>`\n      SELECT * FROM cf_agents_schedules WHERE id = ${id}\n    `;\n    if (!result) return undefined;\n\n    return { ...result[0], payload: JSON.parse(result[0].payload) as T };\n  }\n  getSchedules<T = string>(\n    criteria: {\n      description?: string;\n      id?: string;\n      type?: \"scheduled\" | \"delayed\" | \"cron\";\n      timeRange?: { start?: Date; end?: Date };\n    } = {}\n  ): Schedule<T>[] {\n    let query = \"SELECT * FROM cf_agents_schedules WHERE 1=1\";\n    const params = [];\n\n    if (criteria.id) {\n      query += \" AND id = ?\";\n      params.push(criteria.id);\n    }\n\n    if (criteria.description) {\n      query += \" AND description = ?\";\n      params.push(criteria.description);\n    }\n\n    if (criteria.type) {\n      query += \" AND type = ?\";\n      params.push(criteria.type);\n    }\n\n    if (criteria.timeRange) {\n      query += \" AND time >= ? AND time <= ?\";\n      const start = criteria.timeRange.start || new Date(0);\n      const end = criteria.timeRange.end || new Date(999999999999999);\n      params.push(\n        Math.floor(start.getTime() / 1000),\n        Math.floor(end.getTime() / 1000)\n      );\n    }\n\n    const result = this.ctx.storage.sql\n      .exec(query, ...params)\n      .toArray()\n      .map((row) => ({\n        ...row,\n        payload: JSON.parse(row.payload as string) as T,\n      })) as Schedule<T>[];\n\n    return result;\n  }\n\n  async cancelSchedule(id: string): Promise<boolean> {\n    this.sql`DELETE FROM cf_agents_schedules WHERE id = ${id}`;\n\n    await this.scheduleNextAlarm();\n    return true;\n  }\n\n  private async scheduleNextAlarm() {\n    // Find the next schedule that needs to be executed\n    const result = this.sql`\n      SELECT time FROM cf_agents_schedules \n      WHERE time > ${Math.floor(Date.now() / 1000)}\n      ORDER BY time ASC \n      LIMIT 1\n    `;\n    if (!result) return;\n\n    if (result.length > 0 && \"time\" in result[0]) {\n      const nextTime = result[0].time * 1000;\n      await this.ctx.storage.setAlarm(nextTime);\n    }\n  }\n\n  async alarm() {\n    const now = Math.floor(Date.now() / 1000);\n\n    // Get all schedules that should be executed now\n    const result = this.sql<Schedule<string>>`\n      SELECT * FROM cf_agents_schedules WHERE time <= ${now}\n    `;\n\n    for (const row of result || []) {\n      const callback = this[row.callback as keyof Agent<Env>];\n      if (!callback) {\n        console.error(`callback ${row.callback} not found`);\n        continue;\n      }\n      try {\n        (\n          callback as (\n            payload: unknown,\n            schedule: Schedule<unknown>\n          ) => Promise<void>\n        ).bind(this)(JSON.parse(row.payload as string), row);\n      } catch (e) {\n        console.error(`error executing callback ${row.callback}`, e);\n      }\n      if (row.type === \"cron\") {\n        // Update next execution time for cron schedules\n        const nextExecutionTime = getNextCronTime(row.cron);\n        const nextTimestamp = Math.floor(nextExecutionTime.getTime() / 1000);\n\n        this.sql`\n          UPDATE cf_agents_schedules SET time = ${nextTimestamp} WHERE id = ${row.id}\n        `;\n      } else {\n        // Delete one-time schedules after execution\n        this.sql`\n          DELETE FROM cf_agents_schedules WHERE id = ${row.id}\n        `;\n      }\n    }\n\n    // Schedule the next alarm\n    await this.scheduleNextAlarm();\n  }\n\n  async destroy() {\n    // drop all tables\n    this.sql`DROP TABLE IF EXISTS cf_agents_state`;\n    this.sql`DROP TABLE IF EXISTS cf_agents_schedules`;\n\n    // delete all alarms\n    await this.ctx.storage.deleteAlarm();\n    await this.ctx.storage.deleteAll();\n  }\n}\n\nexport type AgentNamespace<Agentic extends Agent<unknown>> =\n  DurableObjectNamespace<Agentic>;\n\nexport type AgentContext = DurableObjectState;\n\nexport type AgentOptions<Env> = PartyServerOptions<Env>;\n\nexport function routeAgentRequest<Env>(\n  request: Request,\n  env: Env,\n  options?: AgentOptions<Env>\n) {\n  return routePartykitRequest(request, env as Record<string, unknown>, {\n    prefix: \"agents\",\n    ...(options as PartyServerOptions<Record<string, unknown>>),\n  });\n}\n\nexport async function routeAgentEmail<Env>(\n  email: ForwardableEmailMessage,\n  env: Env,\n  options?: AgentOptions<Env>\n): Promise<void> {}\n\nexport function getAgentByName<Env, T extends Agent<Env>>(\n  namespace: AgentNamespace<T>,\n  name: string,\n  options?: {\n    jurisdiction?: DurableObjectJurisdiction;\n    locationHint?: DurableObjectLocationHint;\n  }\n) {\n  return getServerByName<Env, T>(namespace, name, options);\n}\n", "import { Agent } from \"@cloudflare/agents\";\r\n\r\n/**\r\n * Make sure these models exist in YOUR account.\r\n * Check with:  npx wrangler ai models\r\n */\r\nconst CHAT_MODEL  = \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\";\r\nconst EMBED_MODEL = \"@cf/baai/bge-small-en-v1.5\";\r\n\r\ntype Env = {\r\n  AI: Ai;\r\n  VECTORIZE_INDEX: VectorizeIndex;\r\n};\r\n\r\ntype Msg = { role: \"user\" | \"assistant\"; text: string };\r\n\r\ntype Profile = {\r\n  name?: string;\r\n  likes: string[];\r\n  custom: string[]; // any extra remembered statements\r\n};\r\n\r\nexport class MyAgent extends Agent<Env> {\r\n  /** Short-term conversation buffer (lives with this Durable Object instance) */\r\n  private _recent: Msg[] = [];\r\n\r\n  /** Small structured profile we always inject into the prompt */\r\n  private profile: Profile = { likes: [], custom: [] };\r\n\r\n  /** Lazy-load flag for profile persistence (optional) */\r\n  private loaded = false;\r\n\r\n  // ----------------- Public RPCs -----------------\r\n\r\n  /** Non-streaming chat */\r\n  async chat({ message }: { message: string }) {\r\n    await this.ensureLoaded();\r\n\r\n    // 0) If user asked to \"remember ...\", parse and store facts\r\n    const factsChanged = this.tryCaptureFacts(message);\r\n    if (factsChanged) {\r\n        try {\r\n            const st: any = (this as any).storage;\r\n            if (st && typeof st.put === \"function\") {\r\n                await st.put(\"profile\", this.profile);\r\n            }\r\n        } catch {\r\n            // ignore \u2013 persistence is optional\r\n        }\r\n    }\r\n\r\n\r\n    // 1) Save user turn to short-term memory\r\n    this.pushRecent({ role: \"user\", text: message });\r\n\r\n    // 2) Semantic memory (Vectorize)\r\n    const userVec = await this.embed(message);\r\n    if (userVec) {\r\n      await this.env.VECTORIZE_INDEX.upsert([\r\n        { id: `u:${Date.now()}`, values: userVec, metadata: { role: \"user\", text: message } },\r\n      ]);\r\n    }\r\n\r\n    // 3) Build LLM history and prepend memories (profile + vector recall)\r\n    const history = this.buildHistory();\r\n    await this.prependMemories(history, userVec);\r\n\r\n    // 4) Call the LLM (do NOT append message again; it's already in history)\r\n    const aiResp: any = await this.env.AI.run(CHAT_MODEL, { messages: history, stream: false });\r\n\r\n    const assistantText =\r\n      aiResp?.response ??\r\n      aiResp?.result ??\r\n      aiResp?.choices?.[0]?.message?.content ??\r\n      \"Sorry, I couldn't generate a reply.\";\r\n\r\n    // 5) Save assistant turn + embed for future recall\r\n    this.pushRecent({ role: \"assistant\", text: assistantText });\r\n\r\n    const asstVec = await this.embed(assistantText);\r\n    if (asstVec) {\r\n      await this.env.VECTORIZE_INDEX.upsert([\r\n        { id: `a:${Date.now()}`, values: asstVec, metadata: { role: \"assistant\", text: assistantText } },\r\n      ]);\r\n    }\r\n\r\n    return { text: assistantText };\r\n  }\r\n\r\n  /** Streaming chat (Server-Sent Events) */\r\n  async streamChat({ message }: { message: string }) {\r\n    await this.ensureLoaded();\r\n\r\n    const factsChanged = this.tryCaptureFacts(message);\r\n    if (factsChanged) {\r\n        try {\r\n            const st: any = (this as any).storage;\r\n            if (st && typeof st.put === \"function\") {\r\n                 await st.put(\"profile\", this.profile);\r\n            }\r\n        } catch {\r\n        // ignore \u2013 persistence is optional\r\n        }\r\n    }\r\n\r\n\r\n    // 1) Save user turn\r\n    this.pushRecent({ role: \"user\", text: message });\r\n\r\n    // 2) Embed & upsert\r\n    const userVec = await this.embed(message);\r\n    if (userVec) {\r\n      await this.env.VECTORIZE_INDEX.upsert([\r\n        { id: `u:${Date.now()}`, values: userVec, metadata: { role: \"user\", text: message } },\r\n      ]);\r\n    }\r\n\r\n    // 3) Build history & memories\r\n    const history = this.buildHistory();\r\n    await this.prependMemories(history, userVec);\r\n\r\n    // 4) Stream tokens\r\n    const aiStream: any = await this.env.AI.run(CHAT_MODEL, { messages: history, stream: true });\r\n\r\n    const encoder = new TextEncoder();\r\n    const ts = new TransformStream();\r\n    const writer = ts.writable.getWriter();\r\n\r\n    (async () => {\r\n      let full = \"\";\r\n      try {\r\n        for await (const chunk of aiStream) {\r\n          const token = chunk?.response ?? chunk?.delta ?? \"\";\r\n          if (token) {\r\n            full += token;\r\n            // standard SSE frame\r\n            await writer.write(encoder.encode(`data: ${token}\\n\\n`));\r\n          }\r\n        }\r\n\r\n        // Save & embed assistant output\r\n        this.pushRecent({ role: \"assistant\", text: full });\r\n        const asstVec = await this.embed(full);\r\n        if (asstVec) {\r\n          await this.env.VECTORIZE_INDEX.upsert([\r\n            { id: `a:${Date.now()}`, values: asstVec, metadata: { role: \"assistant\", text: full } },\r\n          ]);\r\n        }\r\n\r\n        // Clean end event (no printable markers)\r\n        await writer.write(encoder.encode(`event: done\\ndata:\\n\\n`));\r\n      } catch (e) {\r\n        await writer.write(encoder.encode(`event: error\\ndata: ${String(e)}\\n\\n`));\r\n      } finally {\r\n        await writer.close();\r\n      }\r\n    })();\r\n\r\n    return { readable: ts.readable };\r\n  }\r\n\r\n  /** Used by the right panel in your UI */\r\n  getRecent() {\r\n    return { recent: this._recent.slice(-10) };\r\n  }\r\n\r\n  // ----------------- Helpers -----------------\r\n\r\n  /** Load profile from Durable Object storage (once) */\r\n  // 1) replace your ensureLoaded() with this guarded version\r\n    private async ensureLoaded() {\r\n    if (this.loaded) return;\r\n\r\n        try {\r\n            // In Durable Objects this is usually available, but in Agents it may not be.\r\n            const st: any = (this as any).storage;\r\n            if (st && typeof st.get === \"function\") {\r\n                const saved = await st.get<Profile>(\"profile\");\r\n                if (saved && typeof saved === \"object\") {\r\n                    this.profile = { likes: [], custom: [], ...saved };\r\n            }\r\n        }\r\n    } catch {\r\n        // ignore \u2013 persistence is optional\r\n    }\r\n\r\n    this.loaded = true;\r\n    }\r\n\r\n\r\n  /** Parse \u201Cremember \u2026\u201D into structured facts. Returns true if profile changed. */\r\n  private tryCaptureFacts(message: string): boolean {\r\n    const before = JSON.stringify(this.profile);\r\n\r\n    const raw = message.trim();\r\n    const lower = raw.toLowerCase();\r\n    if (!lower.startsWith(\"remember\")) return false;\r\n\r\n    // \"remember my name is Sam\"\r\n    const nameMatch = /my\\s+name\\s+is\\s+([a-z][a-z' -]{1,40})/i.exec(raw);\r\n    if (nameMatch) {\r\n      const name = this.cleanScalar(nameMatch[1]);\r\n      if (name) this.profile.name = this.titleCase(name);\r\n    }\r\n\r\n    // \"remember I like soccer\" / \"remember I love sushi\"\r\n    const likeMatch = /\\bi\\s+(?:like|love)\\s+(.+)$/i.exec(raw);\r\n    if (likeMatch) {\r\n      const like = this.cleanScalar(likeMatch[1]);\r\n      if (like) this.pushUnique(this.profile.likes, like);\r\n    }\r\n\r\n    // \"remember my favorite sport is soccer\"\r\n    const favMatch = /my\\s+favorite\\s+([a-z ]+?)\\s+is\\s+(.+)$/i.exec(raw);\r\n    if (favMatch) {\r\n      const what = this.cleanScalar(favMatch[1]);\r\n      const val  = this.cleanScalar(favMatch[2]);\r\n      if (what && val) this.pushUnique(this.profile.likes, `${what}: ${val}`);\r\n    }\r\n\r\n    // If nothing matched, store the raw clause after \"remember\"\r\n    if (!nameMatch && !likeMatch && !favMatch) {\r\n      const custom = raw.replace(/^remember\\s*/i, \"\").trim();\r\n      if (custom) this.pushUnique(this.profile.custom, custom);\r\n    }\r\n\r\n    return JSON.stringify(this.profile) !== before;\r\n  }\r\n\r\n  private pushRecent(m: Msg) {\r\n    this._recent.push(m);\r\n    // keep last ~20 turns\r\n    if (this._recent.length > 20) this._recent.splice(0, this._recent.length - 20);\r\n  }\r\n\r\n  /** Build conversation history sent to the model */\r\n  private buildHistory() {\r\n    const history: Array<{ role: \"system\" | \"user\" | \"assistant\"; content: string }> = [\r\n      { role: \"system\", content: \"You are a helpful, concise assistant.\" },\r\n    ];\r\n    for (const m of this._recent) {\r\n      history.push({ role: m.role === \"assistant\" ? \"assistant\" : \"user\", content: m.text });\r\n    }\r\n    return history;\r\n  }\r\n\r\n  /** Prepend explicit profile + semantic recall to the prompt */\r\n  private async prependMemories(\r\n    history: Array<{ role: \"system\" | \"user\" | \"assistant\"; content: string }>,\r\n    userVec: number[] | null\r\n  ) {\r\n    // 1) Structured profile (deterministic)\r\n    const facts: string[] = [];\r\n    if (this.profile.name) facts.push(`name: ${this.profile.name}`);\r\n    if (this.profile.likes.length) facts.push(`likes: ${this.profile.likes.join(\", \")}`);\r\n    if (this.profile.custom.length) facts.push(...this.profile.custom);\r\n\r\n    if (facts.length) {\r\n      history.unshift({\r\n        role: \"system\",\r\n        content:\r\n          `Known user profile (treat as true unless contradicted):\\n` +\r\n          facts.map((f) => `- ${f}`).join(\"\\n\"),\r\n      });\r\n    }\r\n\r\n    // 2) Semantic recall (Vectorize)\r\n    if (userVec) {\r\n      const recalled = await this.recall(userVec, 4);\r\n      if (recalled.length) {\r\n        history.unshift({\r\n          role: \"system\",\r\n          content: `Relevant notes from memory:\\n- ${recalled.join(\"\\n- \")}`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private cleanScalar(s: string) {\r\n    return s.replace(/^that\\s+/i, \"\").replace(/[.?!]+$/g, \"\").trim();\r\n  }\r\n\r\n  private titleCase(s: string) {\r\n    return s\r\n      .split(/\\s+/)\r\n      .map((w) => w.slice(0, 1).toUpperCase() + w.slice(1).toLowerCase())\r\n      .join(\" \");\r\n  }\r\n\r\n  private pushUnique(arr: string[], v: string) {\r\n    const key = v.toLowerCase();\r\n    if (!arr.some((x) => x.toLowerCase() === key)) arr.push(v);\r\n  }\r\n\r\n  private async embed(text: string): Promise<number[] | null> {\r\n    try {\r\n      const resp: any = await this.env.AI.run(EMBED_MODEL, { text });\r\n      const vec: number[] = resp?.embedding ?? resp?.data?.[0]?.embedding;\r\n      return Array.isArray(vec) ? vec : null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async recall(vec: number[], topK = 4): Promise<string[]> {\r\n    try {\r\n      const q = await this.env.VECTORIZE_INDEX.query(vec, { topK });\r\n      return (q?.matches ?? []).map((m: any) => m?.metadata?.text).filter(Boolean);\r\n    } catch {\r\n      return [];\r\n    }\r\n  }\r\n}\r\n", "import { AgentNamespace } from \"@cloudflare/agents\";\r\nimport { MyAgent } from \"./agent\";\r\n\r\nexport interface Env {\r\n  MyAgent: AgentNamespace<typeof MyAgent>;\r\n}\r\n\r\nexport default {\r\n  async fetch(req: Request, env: Env): Promise<Response> {\r\n    const url = new URL(req.url);\r\n\r\n    if (url.pathname === \"/\") {\r\n      return new Response(\"OK. Open /app\", { headers: { \"content-type\": \"text/plain\" } });\r\n    }\r\n\r\n    // Non-streaming\r\n    if (url.pathname === \"/api/chat\" && req.method === \"POST\") {\r\n      try {\r\n        const { message } = await req.json();\r\n        const id = env.MyAgent.idFromName(\"default\");\r\n        const stub = env.MyAgent.get(id);\r\n        const result = await stub.chat({ message });\r\n        return Response.json(result);\r\n      } catch (e: any) {\r\n        return Response.json({ error: String(e?.message || e) }, { status: 500 });\r\n      }\r\n    }\r\n\r\n    // Streaming (SSE)\r\n    if (url.pathname === \"/api/chat-stream\" && req.method === \"POST\") {\r\n      try {\r\n        const { message } = await req.json();\r\n        const id = env.MyAgent.idFromName(\"default\");\r\n        const stub = env.MyAgent.get(id);\r\n        const { readable } = await stub.streamChat({ message });\r\n        return new Response(readable, {\r\n          headers: {\r\n            \"content-type\": \"text/event-stream\",\r\n            \"cache-control\": \"no-cache\",\r\n            \"connection\": \"keep-alive\",\r\n          },\r\n        });\r\n      } catch (e: any) {\r\n        return new Response(`event: error\\ndata: ${String(e?.message || e)}\\n\\n`, {\r\n          headers: { \"content-type\": \"text/event-stream\" },\r\n        });\r\n      }\r\n    }\r\n\r\n    // Recent memory\r\n    if (url.pathname === \"/api/recent\" && req.method === \"GET\") {\r\n      try {\r\n        const id = env.MyAgent.idFromName(\"default\");\r\n        const stub = env.MyAgent.get(id);\r\n        const recent = await (stub as any).getRecent?.();\r\n        return Response.json(recent ?? { recent: [] });\r\n      } catch (e: any) {\r\n        return Response.json({ error: String(e?.message || e) }, { status: 500 });\r\n      }\r\n    }\r\n\r\n    if (url.pathname === \"/app\") {\r\n      return new Response(await appPage(), { headers: { \"content-type\": \"text/html\" } });\r\n    }\r\n\r\n    return new Response(\"Not found\", { status: 404 });\r\n  },\r\n};\r\n\r\nasync function appPage() {\r\n  return /* html */ `\r\n<!doctype html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n    <title>FlixChat \u2022 AI Agent</title>\r\n    <style>\r\n      :root{\r\n        --bg:#0b0b0b; --bg-hero:#141414; --card:#141414; --muted:#b3b3b3; --text:#ffffff;\r\n        --red:#e50914; --chip:#2a2a2a; --border:#222; --bubble-user:#1f1f1f; --bubble-ai:#0f0f0f;\r\n        --shadow:0 10px 30px rgba(0,0,0,.35);\r\n      }\r\n      *{box-sizing:border-box} html,body{height:100%}\r\n      body{margin:0;background:var(--bg);color:var(--text);font-family:ui-sans-serif,system-ui,-apple-system,\"Segoe UI\",Roboto,Inter,Arial}\r\n\r\n      .hero{\r\n        background:\r\n          radial-gradient(1200px 400px at 20% -10%, rgba(229,9,20,.35), transparent 50%),\r\n          radial-gradient(1000px 300px at 80% -20%, rgba(229,9,20,.25), transparent 55%),\r\n          var(--bg-hero);\r\n        border-bottom:1px solid var(--border); box-shadow:var(--shadow);\r\n      }\r\n      .hero-inner{max-width:1280px;margin:0 auto;padding:26px 18px 18px;display:flex;align-items:center;gap:14px}\r\n      .logo{width:28px;height:28px;display:grid;place-items:center;border-radius:6px;background:linear-gradient(180deg,var(--red),#a4060e);color:#fff;font-weight:900}\r\n      .brand{font-size:20px;font-weight:800;letter-spacing:.4px}\r\n      .chip{margin-left:auto;background:var(--chip);border:1px solid var(--border);padding:6px 10px;border-radius:999px;color:var(--muted);font-size:12px}\r\n\r\n      .grid{\r\n        max-width:1280px;margin:24px auto 32px;padding:0 18px;\r\n        display:grid; gap:16px; grid-template-columns: 240px 1fr 300px;\r\n      }\r\n      @media (max-width:1100px){ .grid{grid-template-columns: 1fr} .aside-left,.aside-right{display:none} }\r\n\r\n      .panel{background:var(--card);border:1px solid var(--border);border-radius:16px;box-shadow:var(--shadow)}\r\n      .panel-head{padding:14px 16px;border-bottom:1px solid var(--border);font-weight:800}\r\n      .panel-body{padding:12px 16px}\r\n\r\n      .profile{display:flex;align-items:center;gap:10px;padding:10px;border-radius:12px;background:#121212;border:1px solid var(--border);margin-bottom:10px}\r\n      .pfp{width:32px;height:32px;border-radius:8px;display:grid;place-items:center;background:#2b2b2b}\r\n      .pill{display:inline-block;padding:6px 10px;border-radius:999px;background:#1a1a1a;border:1px solid var(--border);color:var(--muted);font-size:12px;margin:4px 6px 0 0}\r\n\r\n      .card{overflow:hidden; position:relative;}\r\n      .card-head{padding:16px 16px;border-bottom:1px solid var(--border);display:flex;align-items:center;gap:10px}\r\n      .title{font-weight:800;font-size:22px}\r\n      .subtitle{color:var(--muted);font-size:13px}\r\n      .row{display:flex;gap:10px;align-items:center;margin-left:auto}\r\n      .btn{padding:10px 14px;border-radius:10px;border:1px solid #3a3a3a;background:#1a1a1a;color:#fff;cursor:pointer}\r\n      .btn.primary{border-color:var(--red);background:linear-gradient(180deg,#ff2a35,var(--red))}\r\n      .btn:disabled{opacity:.6;cursor:not-allowed}\r\n      .toggle{display:flex;align-items:center;gap:8px;background:#0f0f0f;border:1px solid var(--border);padding:8px 10px;border-radius:12px;color:var(--muted);font-size:12px}\r\n\r\n      .history{height:min(60vh,580px);overflow:auto;padding:18px;display:flex;flex-direction:column;gap:12px;scroll-behavior:smooth}\r\n      .msg{display:flex;gap:10px;align-items:flex-start}\r\n      .avatar{width:28px;height:28px;border-radius:8px;display:grid;place-items:center;font-size:12px;color:#fff;flex:0 0 auto}\r\n      .avatar.user{background:#303030} .avatar.ai{background:var(--red)}\r\n      .bubble{padding:12px 14px;border-radius:14px;border:1px solid var(--border);max-width:70%;line-height:1.45;box-shadow:var(--shadow)}\r\n      .user .bubble{background:var(--bubble-user)} .ai .bubble{background:var(--bubble-ai)}\r\n      .time{color:var(--muted);font-size:11px;margin-top:4px}\r\n\r\n      .composer{display:flex;gap:10px;padding:12px;border-top:1px solid var(--border);background:#0e0e0e; position:sticky; bottom:0; z-index:3;}\r\n      .input{flex:1;padding:14px;border-radius:12px;border:1px solid var(--border);background:#0a0a0a;color:#fff;outline:none}\r\n\r\n      .list{display:grid;gap:8px}\r\n      .mem{padding:10px 12px;border-radius:10px;background:#101010;border:1px solid var(--border);color:#ddd}\r\n      .kbd{display:inline-block;border:1px solid var(--border);background:#171717;padding:2px 6px;border-radius:6px;font-size:12px;margin-right:6px;color:#cfcfcf}\r\n      .muted{color:var(--muted);font-size:12px}\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <header class=\"hero\">\r\n      <div class=\"hero-inner\">\r\n        <div class=\"logo\">N</div>\r\n        <div class=\"brand\">FlixChat</div>\r\n        <div class=\"chip\">Workers AI \u2022 Vectorize \u2022 Agents</div>\r\n      </div>\r\n    </header>\r\n\r\n    <div class=\"grid\">\r\n      <aside class=\"panel aside-left\">\r\n        <div class=\"panel-head\">Profiles</div>\r\n        <div class=\"panel-body\">\r\n          <div class=\"profile\"><div class=\"pfp\">\uD83D\uDC64</div><div><div><b>Main</b></div><div class=\"muted\">General assistant</div></div></div>\r\n          <div class=\"profile\"><div class=\"pfp\">\uD83E\uDDE0</div><div><div><b>Research</b></div><div class=\"muted\">Long-form reasoning</div></div></div>\r\n          <div class=\"profile\"><div class=\"pfp\">\uD83D\uDEE0\uFE0F</div><div><div><b>Dev</b></div><div class=\"muted\">Code helper</div></div></div>\r\n          <div style=\"margin-top:12px\">\r\n            <span class=\"pill\">/clear</span>\r\n            <span class=\"pill\">/summarize</span>\r\n            <span class=\"pill\">/remember</span>\r\n          </div>\r\n        </div>\r\n      </aside>\r\n\r\n      <main class=\"panel card\">\r\n        <div class=\"card-head\">\r\n          <div>\r\n            <div class=\"title\">Talk to your Agent</div>\r\n            <div class=\"subtitle\">Remembers facts with Vectorize. Stream responses in real time.</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <button id=\"clear\" class=\"btn\">Clear</button>\r\n            <label class=\"toggle\"><input id=\"streamToggle\" type=\"checkbox\" /> Stream</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"history\" class=\"history\"></div>\r\n\r\n        <div class=\"composer\">\r\n          <input id=\"msg\" class=\"input\" placeholder=\"Ask anything\u2026 try: \u201Cremember my name is Sam and I like basketball\u201D\" />\r\n          <button id=\"send\" type=\"button\" class=\"btn primary\">Send</button>\r\n        </div>\r\n      </main>\r\n\r\n      <aside class=\"panel aside-right\">\r\n        <div class=\"panel-head\">Live Memory</div>\r\n        <div class=\"panel-body\"><div id=\"memList\" class=\"list\"></div></div>\r\n        <div class=\"panel-head\">Shortcuts</div>\r\n        <div class=\"panel-body\">\r\n          <div><span class=\"kbd\">Enter</span><span class=\"muted\">Send</span></div>\r\n          <div><span class=\"kbd\">Shift + Enter</span><span class=\"muted\">New line</span></div>\r\n          <div><span class=\"kbd\">S</span><span class=\"muted\">Toggle Stream</span></div>\r\n          <div><span class=\"kbd\">Esc</span><span class=\"muted\">Focus input</span></div>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n\r\n    <script>\r\n      const history = document.getElementById('history');\r\n      const input   = document.getElementById('msg');\r\n      const sendBtn = document.getElementById('send');\r\n      const streamT = document.getElementById('streamToggle');\r\n      const clearBtn= document.getElementById('clear');\r\n      const memList = document.getElementById('memList');\r\n\r\n      function nowTime(){ return new Date().toLocaleTimeString([], {hour:'2-digit', minute:'2-digit'}); }\r\n      function setBusy(b){ sendBtn.disabled = b; input.disabled = b; }\r\n      function append(role, text){\r\n        const wrap = document.createElement('div'); wrap.className = 'msg ' + role;\r\n        const avatar = document.createElement('div'); avatar.className = 'avatar ' + (role==='user'?'user':'ai'); avatar.textContent = role==='user'?'U':'A';\r\n        const bubble = document.createElement('div'); bubble.className = 'bubble'; bubble.textContent = text;\r\n        const time = document.createElement('div'); time.className='time'; time.textContent = nowTime();\r\n        const col = document.createElement('div'); col.appendChild(bubble); col.appendChild(time);\r\n        wrap.appendChild(avatar); wrap.appendChild(col);\r\n        history.appendChild(wrap); history.scrollTop = history.scrollHeight;\r\n      }\r\n\r\n      async function postJSON(url, body){\r\n        const res = await fetch(url, { method:'POST', headers:{'content-type':'application/json'}, body: JSON.stringify(body) });\r\n        if(!res.ok){ try{ const j = await res.json(); throw new Error(j.error||'Request failed'); } catch{ throw new Error('Request failed'); } }\r\n        return res.json();\r\n      }\r\n\r\n      async function refreshMemory(){\r\n        try{\r\n          const res = await fetch('/api/recent'); if(!res.ok) return;\r\n          const data = await res.json();\r\n          const items = (data?.recent || []).slice().reverse();\r\n          memList.innerHTML = '';\r\n          for(const m of items){\r\n            const div = document.createElement('div');\r\n            div.className = 'mem';\r\n            div.textContent = (m.role === 'assistant' ? 'A: ' : 'U: ') + m.text;\r\n            memList.appendChild(div);\r\n          }\r\n        }catch{}\r\n      }\r\n\r\n      function parseSSEChunk(chunk, onData, onEvent){\r\n        const lines = chunk.split('\\\\n');\r\n        for(const raw of lines){\r\n          const line = raw.trim();\r\n          if(!line) continue;\r\n          if(line.startsWith('data: ')){\r\n            const payload = line.slice(6);\r\n            if(payload === '' || payload === '[END]') continue; // ignore end/empty markers\r\n            onData(payload);\r\n          } else if(line.startsWith('event: ')){\r\n            onEvent(line.slice(7).trim());\r\n          }\r\n        }\r\n      }\r\n\r\n      async function send(){\r\n        const message = input.value.trim(); if(!message) return;\r\n        input.value=''; append('user', message); setBusy(true);\r\n\r\n        try{\r\n          if(streamT && streamT.checked){\r\n            // streaming\r\n            append('ai', ''); const lastBubble = history.querySelector('.msg.ai:last-child .bubble');\r\n            const res = await fetch('/api/chat-stream', {\r\n              method:'POST', headers:{'content-type':'application/json'},\r\n              body: JSON.stringify({ message })\r\n            });\r\n            if(!res.ok || !res.body) throw new Error('Stream failed');\r\n\r\n            const reader = res.body.getReader(); const dec = new TextDecoder();\r\n            while(true){\r\n              const {value, done} = await reader.read(); if(done) break;\r\n              parseSSEChunk(dec.decode(value, {stream:true}),\r\n                (token)=> { lastBubble.textContent += token; history.scrollTop = history.scrollHeight; },\r\n                (_ev)=> {}\r\n              );\r\n            }\r\n          }else{\r\n            // non-streaming\r\n            const data = await postJSON('/api/chat', { message });\r\n            append('ai', data.text || '(no response)');\r\n          }\r\n          await refreshMemory();\r\n        }catch(e){\r\n          append('ai', '\u26A0\uFE0F ' + (e.message || e));\r\n        }finally{\r\n          setBusy(false); input.focus();\r\n        }\r\n      }\r\n\r\n      // Wire events after DOM is ready\r\n      window.addEventListener('DOMContentLoaded', () => {\r\n        sendBtn.addEventListener('click', send);\r\n        input.addEventListener('keydown', (e)=> {\r\n          if(e.key==='Enter' && !e.shiftKey){ e.preventDefault(); send(); }\r\n        });\r\n        if (clearBtn) clearBtn.addEventListener('click', ()=> { history.innerHTML=''; });\r\n        document.addEventListener('keydown', (e)=> {\r\n          if(e.key==='s' || e.key==='S') { if (streamT) streamT.checked = !streamT.checked; }\r\n          if(e.key==='Escape') input.focus();\r\n        });\r\n        append('ai','Welcome to FlixChat. Tell me something to remember.');\r\n        refreshMemory();\r\n      });\r\n    </script>\r\n  </body>\r\n</html>\r\n`;\r\n}\r\n\r\nexport { MyAgent } from \"./agent\";\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"E:\\\\cf-ai-agent-pro\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"E:\\\\cf-ai-agent-pro\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"E:\\\\cf-ai-agent-pro\\\\.wrangler\\\\tmp\\\\bundle-eEzcaS\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"E:\\\\cf-ai-agent-pro\\\\.wrangler\\\\tmp\\\\bundle-eEzcaS\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"E:\\\\cf-ai-agent-pro\\\\.wrangler\\\\tmp\\\\bundle-eEzcaS\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2OpB;AA5Oe;;;ACnEf,IAAM,YAAwB,8BAA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",
  "names": ["e", "ctx"]
}
